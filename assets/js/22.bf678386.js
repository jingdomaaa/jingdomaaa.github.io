(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{505:function(e,r,n){"use strict";n.r(r);var o=n(4),t=Object(o.a)({},(function(){var e=this,r=e.$createElement,n=e._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("Boxx"),e._v(" "),n("h1",{attrs:{id:"docker-engine-docker-引擎"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-engine-docker-引擎"}},[e._v("#")]),e._v(" Docker Engine(Docker 引擎)")]),e._v(" "),n("h2",{attrs:{id:"docker-engine概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker-engine概述"}},[e._v("#")]),e._v(" Docker Engine概述")]),e._v(" "),n("p",[e._v("Docker Engine是一种开源容器化技术，用于构建和容器化您的应用程序。\nDocker Engine通过以下方式充当client-server应用程序：")]),e._v(" "),n("ul",[n("li",[e._v("具有长时间运行的后台的服务器dockerd。")]),e._v(" "),n("li",[e._v("APIs，用于指定程序可以用来与Docker守护程序进行对话和指示的接口。")]),e._v(" "),n("li",[e._v("命令行界面（command line interface/CLI）客户端docker。\nCLI使用Docker APIs通过脚本或直接CLI命令控制或交互Docker后台通过脚本或直接CLI命令。许多其他Docker应用程序都使用API和CLI作为基础。后台创建和管理Docker对象，例如镜像(Images)，容器(Containers)，网络(Networks)和卷(volumes)。")])])],1)}),[],!1,null,null,null);r.default=t.exports}}]);