(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{514:function(t,e,r){"use strict";r.r(e);var o=r(4),a=Object(o.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("Boxx"),t._v(" "),r("h1",{attrs:{id:"docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" Docker")]),t._v(" "),r("h2",{attrs:{id:"什么docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么docker"}},[t._v("#")]),t._v(" 什么Docker")]),t._v(" "),r("p",[t._v("Docker是一个虚拟环境容器。可以将你的开发环境、代码、配置文件等一并打包到这个容器中，并发布和应用到任意平台中。\n比如，你在本地用Python开发网站后台，开发测试完成后，就可以将Python3及其依赖包、Flask及其各种插件、Mysql、Nginx等打包到一个容器中，然后部署到任意你想部署到的环境。")]),t._v(" "),r("h2",{attrs:{id:"docker的三个概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker的三个概念"}},[t._v("#")]),t._v(" Docker的三个概念")]),t._v(" "),r("p",[t._v("镜像(image):类似于虚拟机中的镜像，是一个包含有文件系统的面向Docker引擎的只读模式。")]),t._v(" "),r("ul",[r("li",[t._v("任何应用程序运行都需要环境，而镜像就是用来提供这种运行环境的。")])]),t._v(" "),r("blockquote",[r("p",[t._v("例如一个Ubuntu镜像就是一个包含Ubuntu操作系统的模板，同理，在该镜像上装上Apache软件，就可以称为Apache镜像。")])]),t._v(" "),r("p",[t._v("容器(Container):类似于一个轻量级的沙盒，可以将其看作一个极简的Linux系统环境（包括root权限、进程空间、用户空间和网络空间等），以及运行在其中的应用程序。")]),t._v(" "),r("ul",[r("li",[t._v("Docker引擎利用容器来运行、隔离各个应用。")]),t._v(" "),r("li",[t._v("容器是镜像创建的应用实例，可以创建、启动、停止、删除容器，各个容器之间是是相互隔离的，互不影响。")])]),t._v(" "),r("blockquote",[r("p",[t._v("注意：镜像本身是只读的，容器从镜像启动时，Docker在镜像的上层创建一个可写层，镜像本身不变。")])]),t._v(" "),r("p",[t._v("仓库(Repository):类似于代码仓库，这里是镜像仓库，是Docker用来集中存放镜像文件的地方。")]),t._v(" "),r("blockquote",[r("p",[t._v("注意与注册服务器（Registry）的区别：注册服务器是存放仓库的地方，一般会有多个仓库。\n而仓库是存放镜像的地方，一般每个仓库存放一类镜像，每个镜像利用tag进行区分，比如Ubuntu仓库存放有多个版本（12.04、14.04等）的Ubuntu镜像。")])])],1)}),[],!1,null,null,null);e.default=a.exports}}]);